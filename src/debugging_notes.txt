Helpful debugging tips

# If errors arises because of JavaFx add the module path to 
	VM arguments
	
	Run configurations [next run button] >> Arguments >> VM arguments
	paste the command below, Apply >>>>,,, RUN
	// You are welcome! 
	
	
	
	
--module-path "your-path\lib" --add-modules javafx.controls,javafx.fxml
example:
--module-path "/Users/MPB/JavaLibs/javafx-sdk-17.0.1/lib" --add-modules javafx.controls,javafx.fxml

If there is no error but the windown doesn't appear
	In configurations 
	disable Use the -XstartOnFirst....

############################
############################
If presented with Build failed, set an Absolute path

Make sure you are running the latest version of Eclipse. I've tested this with Luna 4.4 as I had the same issue.

Install the latest version of JavaFX Scene Builder. You can find version 2.0 here: http://www.oracle.com/technetwork/java/javase/downloads/sb2download-2177776.html

Then set your absolute path to the JavaFX Scene Builder in your preferences:

Click on the menu path: Window->Preferences->General->Editors->File Association
Select *.fxml in the "File types:" list on the right hand side
Click the "Add..." button for the "Associated editors:" list.
Click the "External programs" in the "Editor Selection" menu.
Click the "External programs" radio button.
Click the "Browse..." button and Navigate to this path: "C:\Program Files (x86)\Oracle\JavaFX Scene Builder 2.0". Select the file: JavaFX Scene Builder 2.0.exe
Click the "Open" button.
In the Editor Selection window select the "OK" button.

In the Associated editors: list, select "JavaFX Scene Builder 2.0" and click the "Default" button.

Now you should be good to go!

############################